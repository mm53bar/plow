#!/usr/bin/env bash

set -e

function usage
{
  echo
  echo "$(basename $0) runs recipes on your servers"
  echo
  echo "usage: $(basename $0) [commands [--staging | --production] [--role rolename] [--sudo]] | [--help]"
  echo
  echo "       commands           : list of recipes that you want to execute"
  echo "                          :   e.g. postgres nginx rails"
  echo "                          :   (should correspond to recipes in Plowfile)"
  echo "       --staging          : use .env.staging for configuration"
  echo "       --production       : use .env.production for configuration"
  echo "       --role             : use role when choosing destination servers"
  echo "       --help             : displays the information you're reading now"
  echo "       --sudo             : run all commands as sudo"
  echo
}

declare -a commands

while test $# != 0; do
  case "$1" in
    --staging|staging)
      ENVIRONMENT=staging
      ;;
    --production|production)      
      ENVIRONMENT=production
      ;;
    --role)
      shift
      ROLE=$1
      ;;
    --sudo|sudo)
      SUDO=sudo
      ;;
    --help)
      usage
      exit
      ;;
    --*)
      tmp=${1:2}
      eval ${tmp%=*}=${tmp#*=} 
      ;;
    *)
      commands[${#commands[@]}]="$1"
      ;;
  esac
  shift
done

recipe() {
  wget -nc -qP .plow $1
}

bail() {
  echo -e "\033[31m  failed: $1\033[0m"
  exit 1
}

if [ ! $ENVIRONMENT ]; then
  bail "No environment specified"
else
  [[ -f .env.$ENVIRONMENT ]] || bail "no .env.$ENVIRONMENT found"
  source .env.$ENVIRONMENT
  mkdir -p .plow && cat .env.$ENVIRONMENT > .plow/plow.sh
fi

if [ $SERVER ]; then
  SERVERS[${#SERVERS[@]}]=$SERVER
else
  TAG=${PWD##*/}
  [[ $ROLE ]] && TAG+="_$ROLE"
  TAG+="_$ENVIRONMENT"

  DESCRIBE_TAG=$(ec2-describe-tags --filter "key=Name" --filter "value=$TAG")
  [[ $DESCRIBE_TAG ]] || bail "no target server found matching '$TAG'"
  INSTANCE_NAMES=($(echo "${DESCRIBE_TAG}" | grep TAG | awk {'print $3'}))

  for instance in ${INSTANCE_NAMES[@]}; do 
    DESCRIBE_INSTANCE=$(ec2-describe-instances $instance)
    SERVERS[${#SERVERS[@]}]=$(echo ${DESCRIBE_INSTANCE} | sed -E 's/RESERVATION.*ami-.{9}//' | sed -E 's/\ .*//')
  done
fi

if [ ${#commands[@]} == '0' ]; then
  bail "No recipes specified"
else
  source Plowfile
  for i in "${RECIPES[@]}"
  do
    recipe $i
  done  
  for command in "${commands[@]}"
  do
    [[ -f .plow/$command ]] || bail "Recipe '$command' not found"
    {
      echo
      echo "echo -e '\033[1;33m== Processing recipe: $command\033[0m'"
      cat .plow/$command
    }  >> .plow/plow.sh
  done  
fi

mkdir -p .plow/files && cp ${FILES[@]} .plow/files/ && cd .plow
for server in ${SERVERS[@]}; do
  echo -e "\033[1;35m== Plowing $server\033[0m"
  tar cz . | ssh $USER@$server "rm -rf plow && mkdir plow && cd plow && tar xz && $SUDO bash plow.sh"
done
